// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auth {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  createAt DateTime @default(now())
  role Role
  user User?
  company Company?
}

model User {
  id  Int @id @default(autoincrement())
  auth Auth @relation(fields: [authId], references: [id])
  authId Int @unique
  name String
  applicant Applicant?
}

model Company {
  id  Int @id @default(autoincrement())
  auth Auth @relation(fields: [authId], references: [id])
  authId Int @unique
  name String
  description String?
  Job Job[]
}

enum Role {
  company
  user
  admin
}

model Job {
  id Int @id @default(autoincrement())
  company Company @relation(fields: [companyId], references: [id])
  companyId Int 
  title String
  description String
  minSalary Int 
  maxSalary Int 
  status Boolean
  createAt DateTime @default(now())
  tags String
  applicant Applicant?
}


model Applicant {
  id Int @id @default(autoincrement())
  job Job @relation(fields: [jobId], references: [id])
  jobId Int  @unique
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  title String
  description String
}